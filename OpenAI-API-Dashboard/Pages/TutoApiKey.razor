@page "/OpenAI-API-Dashboard/tuto"
@inject ILocalStorageService _localstorage;

<div style="position:sticky; bottom:0; left:auto; right:auto; margin:auto; max-width:1000px; background-color:white">
    <h1 style="display:flex; justify-content:center; margin:30px">Tuto ApiKey</h1>
    <h3>Go to : <a target="_blank" href="https://platform.openai.com/api-keys">https://platform.openai.com/api-keys</a></h3>
    <p>Authenticate yourself</p>
    <img src="/images/OpenAi _API_key.png" style="max-width:1000px; margin:20px 0px; border:4px solid black; border-radius:20px" />
    <h3>Create secret key :</h3>
    <img src="/images/Create_Key.png" style="max-width:1000px; margin:20px 0px; border:4px solid black; border-radius:20px" />
    <h3>Paste key here :</h3>
    <div style="margin-bottom:100px; max-width:1000px; display:flex; flex-direction:row; margin-top:10px">
        <div Style="width:460px;margin:0px 20px 0px 0px">
            <MudTextField @bind-Value="OpenAiKey" Label="Key" Variant="Variant.Outlined"></MudTextField>
        </div>
        <MudButton OnClick="() => GetLLMsModelsAsync()" id="testAPIkeyButton" Style="align-self:center" Variant="Variant.Outlined">OK<MudIcon Class="ml-2" Icon="@Icons.Material.Filled.Send" /></MudButton>

        @if (_isOpen)
        {
            <MudCard Style="position:relative; right:100px; padding:10px 10px 0;">
                <p>API Key invalid !!!</p>
                <MudButton OnClick="@ToggleOpen" Style="justify-content:center" Class="ml-auto mr-n3 mb-1" Color="Color.Error">Close</MudButton>
            </MudCard>
        }
    </div>

</div>

@code {
    private string OpenAiKey { get; set; }
    private bool _isOpen = false;

    [Inject] public NavigationManager NavigationManager { get; set; } = default!;

    private async Task GetLLMsModelsAsync()
    {
        using (var httpClient = new HttpClient())
        {
            httpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", OpenAiKey);
            var result = await httpClient.GetAsync("https://api.openai.com/v1/models");
            if (result.StatusCode == System.Net.HttpStatusCode.OK)
            {
                _localstorage.SetItemAsync("OpenAiKey", OpenAiKey);
                NavigationManager.NavigateTo("/");
            }
            else if (result.StatusCode == System.Net.HttpStatusCode.Unauthorized)
            {
                _isOpen = true;
            }
        }
    }

    private void ToggleOpen()
    {
        if (_isOpen)
            _isOpen = false;
        else
            _isOpen = true;
    }
}